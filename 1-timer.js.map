{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet intervalId = null;\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\nconst datetimePicker = document.querySelector('#datetime-picker');\ndatetimePicker.classList.add('datetime-picker');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) {\n    return;\n  }\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(intervalId);\n      updateInterface(0);\n      datetimePicker.disabled = false;\n      return;\n    }\n\n    updateInterface(timeDifference);\n  }, 1000);\n});\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateInterface(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","intervalId","startBtn","datetimePicker","options","selectedDates","selectedDate","iziToast","flatpickr","timeDifference","updateInterface","addLeadingZero","value","ms","days","hours","minutes","seconds","convertMs"],"mappings":"2FAMA,IAAIA,EAAmB,KACnBC,EAAa,KACjB,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpB,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAChEA,EAAe,UAAU,IAAI,iBAAiB,EAE9C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDL,EAAS,SAAW,KAEpBF,EAAmBM,EACnBJ,EAAS,SAAW,GAEvB,CACH,EACAM,EAAU,mBAAoBJ,CAAO,EAErCF,EAAS,iBAAiB,QAAS,IAAM,CAClCF,IAGLE,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BF,EAAa,YAAY,IAAM,CAE7B,MAAMQ,EAAiBT,EADH,IAAI,KAGxB,GAAIS,GAAkB,EAAG,CACvB,cAAcR,CAAU,EACxBS,EAAgB,CAAC,EACjBP,EAAe,SAAW,GAC1B,MACD,CAEDO,EAAgBD,CAAc,CAC/B,EAAE,GAAI,EACT,CAAC,EAED,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAgBG,EAAI,CAC3B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtD,SAAS,cAAc,aAAa,EAAE,YAAcF,EAAeG,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcH,EAAeI,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCJ,EAAeK,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCL,EAAeM,CAAO,CAC1B,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}